<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>Go of Cthullu</title>
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css">
	</head> <body> 
		{{template "navbar"}}
		{{template "section"}}
	<div class="container">



	<div class="content">

  <h1>Welcome to Go of Cuthullu</h1>
  <p>A simple website to automatically generate characters for the Call of Cthullu rpg. All calculations are done according to chaosium's 7th edition Call of Cthullu Keeper Handbook. The project is open source and the accuracy can be checked by looking at the source code in the github! </p>
  <p>
  To create an investigator simply fill in the required fields then press generate. To see the generated character click on the red button saying "Click to see sheet after generation!" Have fun!
  </p>
	</div>
		


			<div class="notification is-dark">
				<form method="post">				
					<div class="field">
						<label class="label">Name</label>
						<div class="control">
							<input class="input" name="name" type="text" placeholder="e.g Charles Dexter Ward">
						</div>
					</div>

					<div class="field">
						<label class="label">Age</label>
						<div class="control">
							<input class="input" name="age" type="number" placeholder="e.g. 26">
						</div>
					</div>

					<div class="field">
						<label class="label">Residence</label>
						<div class="control">
							<input class="input" name="residence" type="text" placeholder="e.g. Providence">
						</div>
					</div>

					<div class="field">
						<label class="label">Birthplace</label>
						<div class="control">
							<input class="input" name="birthplace" type="text" placeholder="e.g. Newport">
						</div>
					</div>

					<div class="field" form method="post">
						<label class="label">Occupation</label>
						<div class="control">
							<input class="input" name="occupation" type="text" placeholder="e.g. Archeologist">
						</div>
					</div>

					<div class="field is-grouped">
						<div class="control">
							<button type="submit" class="button is-link">Generate</button>
						</div>	
					</div>		
				</form>
			</div>

<button class="js-modal-trigger button is-danger" data-target="modal-js-example">
  Click to see sheet after generation!
</button>
			<div class="modal" id="modal-js-example">
				<div class="modal-background"></div>
				<div class="modal-card">
					<header class="modal-card-head">
						<p class="modal-card-title">Character Sheet</p>
						<button class="delete" aria-label="close"></button>
					</header>
					<section class="modal-card-body">
						Name: {{.Name}}
						<br>
Age: {{.Age}}
<br>
			Residence: {{.Residence}}
			<br>
				Birthplace: {{.Birthplace}}
				<br>
Occupation: {{.Occupation}}
<br>
				Str: {{.Str}}
				<br>
				Con: {{.Con}}
				<br>
			Pow: {{.Pow}}
			<br>
			Dex: {{.Dex}}
			<br>
			App: {{.App}}
			<br>
			Siz: {{.Siz}}
			<br>
			Int: {{.Int}}
			<br>
			Edu: {{.Edu}}
			<br>
			Luck: {{.Luck}}
			<br>
			Hp: {{.Hp}}
			<br>
			Mp: {{.Mp}} 
			<br>
			San: {{.San}} 
			<br>
				Move Rate: {{.Mv}}
				<br>
				With regards to strenght you are {{.Description.StrDescription}}
				<br>
			You {{.Description.ConDescription}}
			<br>
			With respect to appearence you are {{.Description.ConDescription}}
			<br>
			You {{.Description.IntDescription}}
			<br>
			You are {{.Description.SizDescription}}
			<br>
			You {{.Description.PowDescription}}
			<br>
			You {{.Description.DexDescription}}
			<br>
			You {{.Description.EduDescription}}
			<br>

					</section>
					<footer class="modal-card-foot">
					</footer>
				</div>
			</div>




			<script>
				document.addEventListener('DOMContentLoaded', () => {
									// Functions to open and close a modal
									function openModal($el) {
														$el.classList.add('is-active');
													}

									function closeModal($el) {
														$el.classList.remove('is-active');
													}

									function closeAllModals() {
														(document.querySelectorAll('.modal') || []).forEach(($modal) => {
																			closeModal($modal);
																		});
													}

									// Add a click event on buttons to open a specific modal
									(document.querySelectorAll('.js-modal-trigger') || []).forEach(($trigger) => {
														const modal = $trigger.dataset.target;
														const $target = document.getElementById(modal);
														console.log($target);

														$trigger.addEventListener('click', () => {
																			openModal($target);
																		});
													});

									// Add a click event on various child elements to close the parent modal
									(document.querySelectorAll('.modal-background, .modal-close, .modal-card-head .delete, .modal-card-foot .button') || []).forEach(($close) => {
														const $target = $close.closest('.modal');

														$close.addEventListener('click', () => {
																			closeModal($target);
																		});
													});

									// Add a keyboard event to close all modals
									document.addEventListener('keydown', (event) => {
														const e = event || window.event;

														if (e.keyCode === 27) { // Escape key
																			closeAllModals();
																		}
													});
								});
			</script>


	</body>
</html>

